syntax = "proto3";

import "google/protobuf/empty.proto";
import "validate/validate.proto";
import "google/protobuf/timestamp.proto";

package protocol.core.v1;

option go_package = "core;corev1";

// Location is a special type that is added in for RPCs that need to check
// permissions
message Location {
  uint64 guild_id = 1;
  uint64 channel_id = 2;
  uint64 message_id = 3;
}

// EMBEDS AND ACTIONS

enum ActionType {
  Normal = 0;
  Primary = 1;
  Destructive = 2;
}

enum ActionPresentation {
  Button = 0;
  Dropdown = 1;
  Menu = 2;
  SmallEntry = 3;
  LargeEntr = 4;
}

enum FieldPresentation {
  Data = 0;
  CaptionedImage = 1;
  Row = 2;
}

message Action {
  string text = 1;
  string url = 2;
  string id = 3;
  ActionType type = 4;
  repeated Action children = 5;
}

message EmbedHeading {
  string text = 1;
  string subtext = 2;
  string url = 3;
  string icon = 4;
}

message EmbedField {
  string title = 1;
  string subtitle = 2;
  string body = 3;

  string image_url = 4;

  FieldPresentation presentation = 5;

  repeated Action actions = 6;
}

message Embed {
  string title = 1;
  string body = 2;

  int64 color = 3;

  EmbedHeading header = 4;
  EmbedHeading footer = 5;

  repeated EmbedField fields = 6;
  repeated Action actions = 7;
}

// TYPES

message Message {
  Location location = 1;
  uint64 author_id = 2;
  google.protobuf.Timestamp created_at = 3;
  google.protobuf.Timestamp edited_at = 4;
  string content = 5;
  repeated Embed embeds = 6;
  repeated Action actions = 7;
  repeated string attachments = 8;
}

// CREATE

message CreateGuildRequest {
  string guild_name = 1 [ (validate.rules).string.min_len = 1 ];
  string picture_url = 2;
}
message CreateGuildResponse { uint64 guild_id = 1; }

message CreateInviteRequest {
  Location location = 1;
  string name = 2 [ (validate.rules).string.min_len = 1 ];
  int32 possible_uses = 3;
}
message CreateInviteResponse { string name = 1; }

message CreateChannelRequest {
  Location location = 1 [ (validate.rules).message.required = true ];
  string channel_name = 2 [ (validate.rules).string.min_len = 1 ];
}
message CreateChannelResponse { uint64 channel_id = 1; }

// READ

message GetGuildRequest {
  Location location = 1 [ (validate.rules).message.required = true ];
}
message GetGuildResponse {
  string guild_name = 1;
  uint64 guild_owner = 2;
  string guild_picture = 3;
}

message GetGuildInvitesRequest {
  Location location = 1 [ (validate.rules).message.required = true ];
}
message GetGuildInvitesResponse {
  message Invite {
    string invite_id = 1;
    int32 possible_uses = 2;
    int32 use_count = 3;
  }
  repeated Invite invites = 1;
}

message GetGuildMembersRequest {
  Location location = 1 [ (validate.rules).message.required = true ];
}
message GetGuildMembersResponse { repeated uint64 members = 1; }

message GetGuildChannelsRequest {
  Location location = 1 [ (validate.rules).message.required = true ];
}
message GetGuildChannelsResponse {
  message Channel {
    uint64 channel_id = 1;
    string channel_name = 2;
  }

  repeated Channel channels = 1;
}

message GetChannelMessagesRequest {
  Location location = 1 [ (validate.rules).message.required = true ];
  uint64 before_message = 3;
}
message GetChannelMessagesResponse { repeated Message messages = 1; }

// UPDATE

message UpdateGuildNameRequest {
  Location location = 1 [ (validate.rules).message.required = true ];
  string new_guild_name = 2 [ (validate.rules).string.min_len = 1 ];
}

message UpdateChannelNameRequest {
  Location location = 1;
  string new_channel_name = 2;
}

message UpdateMessageRequest {
  Location location = 1 [ (validate.rules).message.required = true ];
  string content = 2;
  bool update_content = 3;
  repeated Embed embeds = 4;
  bool update_embeds = 5;
  repeated Action actions = 6;
  bool update_actions = 7;
  repeated string attachments = 8;
  bool update_attachments = 9;
}

// DELETE

message DeleteGuildRequest {
  Location location = 1 [ (validate.rules).message.required = true ];
}

message DeleteInviteRequest {
  Location location = 1 [ (validate.rules).message.required = true ];
  string invite_id = 2;
}

message DeleteChannelRequest {
  Location location = 1 [ (validate.rules).message.required = true ];
}

message DeleteMessageRequest {
  Location location = 1 [ (validate.rules).message.required = true ];
}

// STREAMS

message StreamGuildEventsRequest { Location location = 1; }

message GuildEvent {
  message MessageSent { Message message = 1; }
  message MessageUpdated {
    Location location = 1;
    google.protobuf.Timestamp edited_at = 2;
    string content = 3;
    bool update_content = 4;
    repeated Embed embeds = 5;
    bool update_embeds = 6;
    repeated Action actions = 7;
    bool update_actions = 8;
    repeated string attachments = 9;
    bool update_attachments = 10;
  }
  message MessageDeleted { Location location = 1; }
  message ChannelUpdated {
    Location location = 1;
    string name = 2;
    bool update_name = 3;
  }
  message ChannelDeleted { Location location = 1; }
  message GuildUpdated {
    string name = 1;
    bool update_name = 2;
  }
  message GuildDeleted {}
  message MemberJoined { uint64 member_id = 1; }
  message MemberLeft { uint64 member_id = 1; }
  oneof event {
    MessageSent sent_message = 1;
    MessageUpdated edited_message = 2;
    MessageDeleted deleted_message = 3;
    ChannelUpdated edited_channel = 4;
    ChannelDeleted deleted_channel = 5;
    GuildUpdated edited_guild = 6;
    GuildDeleted deleted_guild = 7;
    MemberJoined joined_member = 8;
    MemberLeft left_member = 9;
  }
}

message StreamActionEventsRequest {}

message ActionEvent {
  message Action {
    Location location = 1;
    string action_id = 2;
    string action_data = 3;
  }
  oneof event { Action action = 1; }
}

// MEMBERSHIP

message JoinGuildRequest { string invite_id = 1; }
message JoinGuildResponse { Location location = 1; }

message LeaveGuildRequest { Location location = 1; }

// TRIGGERS

message TriggerActionRequest {
  Location location = 1;
  string action_id = 2;
  string action_data = 3;
}

// SendMessage
message SendMessageRequest { Message message = 1; }

service CoreService {
  rpc CreateGuild(CreateGuildRequest) returns (CreateGuildResponse) {}
  rpc CreateInvite(CreateInviteRequest) returns (CreateInviteResponse) {}
  rpc CreateChannel(CreateChannelRequest) returns (CreateChannelResponse) {}

  rpc GetGuild(GetGuildRequest) returns (GetGuildResponse) {}
  rpc GetGuildInvites(GetGuildInvitesRequest)
      returns (GetGuildInvitesResponse) {}
  rpc GetGuildMembers(GetGuildMembersRequest)
      returns (GetGuildMembersResponse) {}
  rpc GetGuildChannels(GetGuildChannelsRequest)
      returns (GetGuildChannelsResponse) {}
  rpc GetChannelMessages(GetChannelMessagesRequest)
      returns (GetChannelMessagesResponse) {}

  rpc UpdateGuildName(UpdateGuildNameRequest) returns (google.protobuf.Empty) {}
  rpc UpdateChannelName(UpdateChannelNameRequest)
      returns (google.protobuf.Empty) {}
  rpc UpdateMessage(UpdateMessageRequest) returns (google.protobuf.Empty) {}

  rpc DeleteGuild(DeleteGuildRequest) returns (google.protobuf.Empty) {}
  rpc DeleteInvite(DeleteInviteRequest) returns (google.protobuf.Empty) {}
  rpc DeleteChannel(DeleteChannelRequest) returns (google.protobuf.Empty) {}
  rpc DeleteMessage(DeleteMessageRequest) returns (google.protobuf.Empty) {}

  rpc JoinGuild(JoinGuildRequest) returns (JoinGuildResponse) {}
  rpc LeaveGuild(LeaveGuildRequest) returns (google.protobuf.Empty) {}

  rpc TriggerAction(TriggerActionRequest) returns (google.protobuf.Empty) {}

  rpc SendMessage(SendMessageRequest) returns (google.protobuf.Empty) {}

  rpc StreamGuildEvents(StreamGuildEventsRequest) returns (stream GuildEvent) {}
  rpc StreamActionEvents(StreamActionEventsRequest)
      returns (stream ActionEvent) {}
}