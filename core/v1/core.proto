syntax = "proto3";

import "google/protobuf/empty.proto";
import "validate/validate.proto";
import "google/protobuf/timestamp.proto";

package protocol.core.v1;

option go_package = "core;corev1";

// Location is a special type that is added in for RPCs that need to check
// permissions
message Location {
  uint64 guild_id = 1 [jstype = JS_STRING];
  uint64 channel_id = 2 [jstype = JS_STRING];
  uint64 message_id = 3 [jstype = JS_STRING];
}

// OVERRIDES
message Override {
  string name = 1;
  string avatar = 2;
  oneof reason {
    string user_defined = 3;
    google.protobuf.Empty webhook = 4;
    google.protobuf.Empty system_plurality =
        5; // plurality, not system as in computer
    google.protobuf.Empty system_message = 6;
    google.protobuf.Empty bridge = 7;
  }
}

// EMBEDS AND ACTIONS

enum ActionType { Normal = 0; Primary = 1; Destructive = 2; }

enum ActionPresentation {
  Button = 0; Dropdown = 1; Menu = 2; SmallEntry = 3; LargeEntry = 4;
}

enum FieldPresentation { Data = 0; CaptionedImage = 1; Row = 2; }

// Rules on actions:
// Actions without a type are assumed to be Button actions or Menu actions when
// nested. Button actions can only have Menu actions as children. Dropdown
// actions can only have non-recursive Menu actions as children. Menu actions
// can only have other Menu actions as children. SmallEntry and LargeActions
// cannot have children.
message Action {
  string text = 1;
  string url = 2;
  string id = 3;
  ActionType type = 4;
  ActionPresentation presentation = 5;
  repeated Action children = 6;
}

message EmbedHeading {
  string text = 1;
  string subtext = 2;
  string url = 3;
  string icon = 4;
}

message EmbedField {
  string title = 1;
  string subtitle = 2;
  string body = 3;

  string image_url = 4;

  FieldPresentation presentation = 5;

  repeated Action actions = 6;
}

message Embed {
  string title = 1;
  string body = 2;

  int64 color = 3;

  EmbedHeading header = 4;
  EmbedHeading footer = 5;

  repeated EmbedField fields = 6;
  repeated Action actions = 7;
}

// TYPES

message Message {
  Location location = 1;
  uint64 author_id = 2 [jstype = JS_STRING];
  google.protobuf.Timestamp created_at = 3;
  google.protobuf.Timestamp edited_at = 4;
  string content = 5;
  repeated Embed embeds = 6;
  repeated Action actions = 7;
  repeated string attachments = 8;
  uint64 in_reply_to = 9 [jstype = JS_STRING];
  Override overrides = 10;
}

// CREATE

message CreateGuildRequest {
  string guild_name = 1;
  string picture_url = 2;
}
message CreateGuildResponse { uint64 guild_id = 1 [jstype = JS_STRING]; }

message CreateInviteRequest {
  Location location = 1;
  string name = 2;
  int32 possible_uses = 3;
}
message CreateInviteResponse { string name = 1; }

message CreateChannelRequest {
  Location location = 1 [(validate.rules).message.required = true];
  string channel_name = 2 [(validate.rules).string.min_len = 1];
  bool is_category = 3;
  uint64 previous_id = 5 [jstype = JS_STRING];
  uint64 next_id = 4 [jstype = JS_STRING];
}
message CreateChannelResponse { uint64 channel_id = 1 [jstype = JS_STRING]; }

message CreateEmotePackRequest { string pack_name = 1; }
message CreateEmotePackResponse { uint64 pack_id = 1 [jstype = JS_STRING]; }

// READ

message GetGuildListRequest {}

message GetGuildListResponse {
  message GuildListEntry {
    uint64 guild_id = 1 [jstype = JS_STRING];
    string host = 2;
  }

  repeated GuildListEntry guilds = 1;
}

message GetGuildRequest { Location location = 1; }
message GetGuildResponse {
  string guild_name = 1;
  uint64 guild_owner = 2 [jstype = JS_STRING];
  string guild_picture = 3;
}

message GetGuildInvitesRequest { Location location = 1; }
message GetGuildInvitesResponse {
  message Invite {
    string invite_id = 1;
    int32 possible_uses = 2;
    int32 use_count = 3;
  }
  repeated Invite invites = 1;
}

message GetGuildMembersRequest { Location location = 1; }
message GetGuildMembersResponse {
  repeated uint64 members = 1 [jstype = JS_STRING];
}

message GetGuildChannelsRequest { Location location = 1; }
message GetGuildChannelsResponse {
  message Channel {
    uint64 channel_id = 1 [jstype = JS_STRING];
    string channel_name = 2;
    bool is_category = 3;
    bool is_voice = 4;
  }

  repeated Channel channels = 1;
}

message GetChannelMessagesRequest {
  Location location = 1;
  uint64 before_message = 2 [jstype = JS_STRING];
}
message GetChannelMessagesResponse { repeated Message messages = 1; }

message GetMessageRequest { Location location = 1; }
message GetMessageResponse { Message message = 1; }

message GetEmotePacksRequest {}
message GetEmotePacksResponse {
  message EmotePack {
    uint64 pack_id = 1 [jstype = JS_STRING];
    uint64 pack_owner = 2 [jstype = JS_STRING];
    string pack_name = 3;
  }

  repeated EmotePack packs = 1;
}

message GetEmotePackEmotesRequest { uint64 pack_id = 1 [jstype = JS_STRING]; }
message GetEmotePackEmotesResponse {
  message Emote {
    string image_id = 1;
    string name = 2;
  }

  repeated Emote emotes = 1;
}

// UPDATE

message UpdateGuildNameRequest {
  Location location = 1;
  string new_guild_name = 2;
}

message UpdateChannelNameRequest {
  Location location = 1;
  string new_channel_name = 2;
}

message UpdateChannelOrderRequest {
  Location location = 1;
  uint64 previous_id = 2 [jstype = JS_STRING];
  uint64 next_id = 3 [jstype = JS_STRING];
}

message UpdateMessageRequest {
  Location location = 1;
  string content = 2;
  bool update_content = 3;
  repeated Embed embeds = 4;
  bool update_embeds = 5;
  repeated Action actions = 6;
  bool update_actions = 7;
  repeated string attachments = 8;
  bool update_attachments = 9;
  Override overrides = 10;
  bool update_overrides = 11;
}

message AddEmoteToPackRequest {
  uint64 pack_id = 1 [jstype = JS_STRING];
  string image_id = 2;
  string name = 3;
}

// DELETE

message DeleteGuildRequest { Location location = 1; }

message DeleteInviteRequest {
  Location location = 1;
  string invite_id = 2;
}

message DeleteChannelRequest { Location location = 1; }

message DeleteMessageRequest { Location location = 1; }

message DeleteEmoteFromPackRequest {
  uint64 pack_id = 1 [jstype = JS_STRING];
  string image_id = 2;
}

message DeleteEmotePackRequest { uint64 pack_id = 1 [jstype = JS_STRING]; }

message DequipEmotePackRequest { uint64 pack_id = 1 [jstype = JS_STRING]; }

// STREAMS

message StreamEventsRequest {
  message StreamGuildEventsRequest { Location location = 1; }

  oneof request { StreamGuildEventsRequest subscribe_to_guild = 1; }
}

message Event {
  message MessageSent { Message message = 1; }
  message MessageUpdated {
    Location location = 1;
    google.protobuf.Timestamp edited_at = 2;
    string content = 3;
    bool update_content = 4;
    repeated Embed embeds = 5;
    bool update_embeds = 6;
    repeated Action actions = 7;
    bool update_actions = 8;
    repeated string attachments = 9;
    bool update_attachments = 10;
    Override overrides = 11;
    bool update_overrides = 12;
  }
  message MessageDeleted { Location location = 1; }
  message ChannelCreated {
    Location location = 1;
    string name = 2;
    uint64 previous_id = 3 [jstype = JS_STRING];
    uint64 next_id = 4 [jstype = JS_STRING];
    bool is_category = 5;
  }
  message ChannelUpdated {
    Location location = 1;
    string name = 2;
    bool update_name = 3;
    uint64 previous_id = 5 [jstype = JS_STRING];
    uint64 next_id = 4 [jstype = JS_STRING];
    bool update_order = 6;
  }
  message ChannelDeleted { Location location = 1; }
  message GuildUpdated {
    string name = 1;
    bool update_name = 2;
  }
  message GuildDeleted {}
  message MemberJoined { uint64 member_id = 1 [jstype = JS_STRING]; }
  message MemberLeft { uint64 member_id = 1 [jstype = JS_STRING]; }
  message GuildAddedToList {
    uint64 guild_id = 1 [jstype = JS_STRING];
    string homeserver = 2;
  }
  message GuildRemovedFromList {
    uint64 guild_id = 1 [jstype = JS_STRING];
    string homeserver = 2;
  }
  message ActionPerformed {
    Location location = 1;
    string action_id = 2;
    string action_data = 3;
  }

  oneof event {
    GuildAddedToList guild_added_to_list = 1;
    GuildRemovedFromList guild_removed_from_list = 2;
    ActionPerformed action_performed = 3;
    MessageSent sent_message = 4;
    MessageUpdated edited_message = 5;
    MessageDeleted deleted_message = 6;
    ChannelCreated created_channel = 7;
    ChannelUpdated edited_channel = 8;
    ChannelDeleted deleted_channel = 9;
    GuildUpdated edited_guild = 10;
    GuildDeleted deleted_guild = 11;
    MemberJoined joined_member = 12;
    MemberLeft left_member = 13;
  }
}

// MEMBERSHIP

message JoinGuildRequest { string invite_id = 1; }
message JoinGuildResponse { Location location = 1; }

message LeaveGuildRequest { Location location = 1; }

// TRIGGERS

message TriggerActionRequest {
  Location location = 1;
  string action_id = 2;
  string action_data = 3;
}

// SendMessage
message SendMessageRequest {
  Location location = 1;
  string content = 2;
  repeated Action actions = 3;
  repeated Embed embeds = 4;
  repeated string attachments = 5;
  uint64 in_reply_to = 6;
  Override overrides = 7;
}
message SendMessageResponse { uint64 message_id = 1 [jstype = JS_STRING]; }

// GUILD LIST
message AddGuildToGuildListRequest {
  uint64 guild_id = 1 [jstype = JS_STRING];
  string homeserver = 2;
}
message AddGuildToGuildListResponse {}

message RemoveGuildFromGuildListRequest {
  uint64 guild_id = 1 [jstype = JS_STRING];
  string homeserver = 2;
}
message RemoveGuildFromGuildListResponse {}

service CoreService {
  rpc CreateGuild(CreateGuildRequest) returns(CreateGuildResponse) {}
  rpc CreateInvite(CreateInviteRequest) returns(CreateInviteResponse) {}
  rpc CreateChannel(CreateChannelRequest) returns(CreateChannelResponse) {}
  rpc CreateEmotePack(CreateEmotePackRequest) returns(CreateEmotePackResponse) {
  }

  rpc GetGuildList(GetGuildListRequest) returns(GetGuildListResponse) {}
  rpc AddGuildToGuildList(AddGuildToGuildListRequest)
      returns(AddGuildToGuildListResponse) {}
  rpc RemoveGuildFromGuildList(RemoveGuildFromGuildListRequest)
      returns(RemoveGuildFromGuildListResponse) {}

  rpc GetGuild(GetGuildRequest) returns(GetGuildResponse) {}
  rpc GetGuildInvites(GetGuildInvitesRequest) returns(GetGuildInvitesResponse) {
  }
  rpc GetGuildMembers(GetGuildMembersRequest) returns(GetGuildMembersResponse) {
  }
  rpc GetGuildChannels(GetGuildChannelsRequest)
      returns(GetGuildChannelsResponse) {}
  rpc GetChannelMessages(GetChannelMessagesRequest)
      returns(GetChannelMessagesResponse) {}
  rpc GetMessage(GetMessageRequest) returns(GetMessageResponse) {}
  rpc GetEmotePacks(GetEmotePacksRequest) returns(GetEmotePacksResponse) {}
  rpc GetEmotePackEmotes(GetEmotePackEmotesRequest)
      returns(GetEmotePackEmotesResponse) {}

  rpc UpdateGuildName(UpdateGuildNameRequest) returns(google.protobuf.Empty) {}
  rpc UpdateChannelName(UpdateChannelNameRequest)
      returns(google.protobuf.Empty) {}
  rpc UpdateChannelOrder(UpdateChannelOrderRequest)
      returns(google.protobuf.Empty) {}
  rpc UpdateMessage(UpdateMessageRequest) returns(google.protobuf.Empty) {}
  rpc AddEmoteToPack(AddEmoteToPackRequest) returns(google.protobuf.Empty) {}

  rpc DeleteGuild(DeleteGuildRequest) returns(google.protobuf.Empty) {}
  rpc DeleteInvite(DeleteInviteRequest) returns(google.protobuf.Empty) {}
  rpc DeleteChannel(DeleteChannelRequest) returns(google.protobuf.Empty) {}
  rpc DeleteMessage(DeleteMessageRequest) returns(google.protobuf.Empty) {}
  rpc DeleteEmoteFromPack(DeleteEmoteFromPackRequest)
      returns(google.protobuf.Empty) {}
  rpc DeleteEmotePack(DeleteEmotePackRequest) returns(google.protobuf.Empty) {}
  rpc DequipEmotePack(DequipEmotePackRequest) returns(google.protobuf.Empty) {}

  rpc JoinGuild(JoinGuildRequest) returns(JoinGuildResponse) {}
  rpc LeaveGuild(LeaveGuildRequest) returns(google.protobuf.Empty) {}

  rpc TriggerAction(TriggerActionRequest) returns(google.protobuf.Empty) {}

  rpc SendMessage(SendMessageRequest) returns(SendMessageResponse) {}

  rpc StreamEvents(stream StreamEventsRequest) returns(stream Event) {}
}
