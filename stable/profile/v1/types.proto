syntax = "proto3";

package protocol.profile.v1;

// The possible statuses a user can have.
enum UserStatus {
  // User is offline (not connected to the server).
  USER_STATUS_OFFLINE_UNSPECIFIED = 0;
  // User is online (this is the default value if ommitted).
  USER_STATUS_ONLINE = 1;
  // User is away.
  USER_STATUS_IDLE = 2;
  // User does not want to be disturbed.
  USER_STATUS_DO_NOT_DISTURB = 3;
  // User is on mobile.
  USER_STATUS_MOBILE = 4;
  // User is streaming
  USER_STATUS_STREAMING = 5;
}

// The possible kinds of an account
enum AccountKind {
  // The account is a full-fledged account controlled by a human
  ACCOUNT_KIND_FULL_UNSPECIFIED = 0;
  // The account is an account controlled by a bot
  ACCOUNT_KIND_BOT = 1;
  // The account is a guest account controlled by a human
  ACCOUNT_KIND_GUEST = 2;
}

// Data for a single profile, without the user's ID.
message Profile {
  // the name of the user.
  string user_name = 1;
  // the user's avatar. This must be a file ID that points to an image.
  optional string user_avatar = 2;
  // the status of the user.
  UserStatus user_status = 3;
  // whether the user is a bot or not.
  bool is_bot = 4 [ deprecated = true ];
  // what kind of account the user is, e.g. full, guest, bot.
  AccountKind account_kind = 5;
}

// Used in `GetProfile` endpoint.
message GetProfileRequest {
  // The id of the user to get.
  uint64 user_id = 1;
}

// Used in `GetProfile` endpoint.
message GetProfileResponse {
  // The user's profile
  Profile profile = 1;
}

// Used in `UpdateProfile` endpoint.
message UpdateProfileRequest {
  // New name of the user.
  optional string new_user_name = 1;
  // New user avatar. The avatar will be removed if the string is empty.
  optional string new_user_avatar = 2;
  // New status of the user.
  optional UserStatus new_user_status = 3;
  // New whether the user is a bot or not.
  //
  // Deprecated; see bot service and guest handling
  // in auth.
  optional bool new_is_bot = 4 [ deprecated = true ];
}

// Used in `UpdateProfile` endpoint.
message UpdateProfileResponse {}

// Used in `GetAppData` endpoint.
message GetAppDataRequest {
  // The app id.
  string app_id = 1;
}

// Used in `GetAppData` endpoint.
message GetAppDataResponse {
  // The app data.
  bytes app_data = 1;
}

// Used in `SetAppData` endpoint.
message SetAppDataRequest {
  // The app id.
  string app_id = 1;
  // The app data.
  bytes app_data = 2;
}
// Used in `SetAppData` endpoint.
message SetAppDataResponse {}
