syntax = "proto3";

package protocol.chat.v1;

option go_package = "github.com/harmony-development/legato/gen/chat/v1";

message QueryPermissionsRequest {
  uint64 guild_id = 1;
  uint64 channel_id = 2;
  string check_for = 3;
  uint64 as = 4;
}
message QueryPermissionsResponse { bool ok = 1; }

message BatchQueryPermissionsRequest {
  repeated QueryPermissionsRequest requests = 1;
}
message BatchQueryPermissionsResponse {
  repeated QueryPermissionsResponse responses = 1;
}

message Permission {
  enum Mode { Allow = 0; Deny = 1; }
  string matches = 1;
  Mode mode = 2;
}

message PermissionList { repeated Permission permissions = 1; }

message SetPermissionsRequest {
  uint64 guild_id = 1;
  uint64 channel_id = 2;
  uint64 role_id = 3;
  PermissionList perms = 4;
}

message GetPermissionsRequest {
  uint64 guild_id = 1;
  uint64 channel_id = 2;
  uint64 role_id = 3;
}
message GetPermissionsResponse { PermissionList perms = 1; }

message Role {
  uint64 role_id = 1;
  string name = 2;
  int32 color = 3;
  bool hoist = 4;
  bool pingable = 5;
}

message MoveRoleRequest {
  uint64 guild_id = 1;
  uint64 role_id = 2;
  harmonytypes.v1.ItemPosition new_position = 3;
}
message MoveRoleResponse {}

message GetGuildRolesRequest { uint64 guild_id = 1; }
message GetGuildRolesResponse { repeated Role roles = 1; }

message AddGuildRoleRequest {
  uint64 guild_id = 1;
  Role role = 2;
}
message AddGuildRoleResponse { uint64 role_id = 1; }

message DeleteGuildRoleRequest {
  uint64 guild_id = 1;
  uint64 role_id = 2;
}

message ModifyGuildRoleRequest {
  uint64 guild_id = 1;
  optional string new_name = 2;
  optional int32 new_color = 3;
  optional bool new_hoist = 4;
  optional bool new_pingable = 5;
}

message ManageUserRolesRequest {
  uint64 guild_id = 1;
  uint64 user_id = 2;
  repeated uint64 give_role_ids = 3;
  repeated uint64 take_role_ids = 4;
}

message GetUserRolesRequest {
  uint64 guild_id = 1;
  uint64 user_id = 2;
}
message GetUserRolesResponse { repeated uint64 roles = 1; }