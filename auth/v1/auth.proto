syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "harmonytypes/v1/types.proto";

package protocol.auth.v1;

option go_package = "github.com/harmony-development/legato/gen/auth/v1";

message BeginAuthResponse { string auth_id = 1; }

message Session {
  uint64 user_id = 1 [jstype = JS_STRING];
  string session_token = 2;
}

message AuthStep {
  message FormField {
    string name = 1;
    string type = 2;
  }

  message Choice {
    string label = 1;
    string title = 2;
    repeated string options = 3;
  }
  message Form {
    string name = 1;
    string title = 2;
    repeated FormField fields = 3;
  }

  string fallback_url = 1;
  oneof step {
    Choice choice = 2;
    Form form = 3;
    Session session = 4;
  }
}

message NextStepRequest {
  string auth_id = 1;

  message Choice { string choice = 1; }
  message Form { repeated google.protobuf.Any fields = 1; }

  oneof step {
    Choice choice = 2;
    Form form = 3;
  }
}

message StreamStepsRequest { string auth_id = 1; }

// Connection
message FederateRequest { string target = 1; }
message FederateReply {
  string token = 1;
  string nonce = 2;
}

message KeyReply { string key = 1; }

message LoginFederatedRequest {
  string auth_token = 1;
  string domain = 2;
}

service AuthService {
  rpc Federate(FederateRequest) returns(FederateReply);
  rpc LoginFederated(LoginFederatedRequest) returns(Session);
  rpc Key(google.protobuf.Empty) returns(KeyReply);
  rpc BeginAuth(google.protobuf.Empty) returns(BeginAuthResponse);
  rpc NextStep(NextStepRequest) returns(AuthStep);
  rpc StreamSteps(StreamStepsRequest) returns(stream AuthStep);
}
